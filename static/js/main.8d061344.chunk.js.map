{"version":3,"sources":["components/FormOrder/FormOrder.js","components/Modal/Modal.js","App.js","index.js"],"names":["initialState","name","type","pizza","no_of_slices","diameter","preparation_time","soup","spiciness_scale","sandwich","slices_of_bread","FormOrder","state","handleChangeName","e","currentTarget","value","setState","handleChangeDish","handleChangeOptions","prevState","Number","createNotification","NotificationManager","info","success","warning","error","handleSubmit","a","preventDefault","credentials","axios","post","setTimeout","props","onClose","resetForm","this","className","onChange","min","max","step","checked","onClick","Component","modalRoot","document","querySelector","Modal","handleKeyDown","code","handleBackdropClick","event","target","window","addEventListener","removeEventListener","createPortal","children","App","showModal","toggleModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8d061344.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport \"./FormOrder.scss\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  type: \"pizza\",\r\n  pizza: {\r\n    no_of_slices: 1,\r\n    diameter: 8,\r\n    preparation_time: \"00:20:00\",\r\n  },\r\n  soup: {\r\n    spiciness_scale: 1,\r\n    preparation_time: \"00:10:00\",\r\n  },\r\n  sandwich: { slices_of_bread: 1, preparation_time: \"00:05:00\" },\r\n};\r\n\r\nclass FormOrder extends Component {\r\n  state = {\r\n    name: \"\",\r\n    type: \"pizza\",\r\n    pizza: {\r\n      no_of_slices: 1,\r\n      diameter: 8,\r\n      preparation_time: \"00:20:00\",\r\n    },\r\n    soup: {\r\n      spiciness_scale: 1,\r\n      preparation_time: \"00:10:00\",\r\n    },\r\n    sandwich: { slices_of_bread: 1, preparation_time: \"00:05:00\" },\r\n  };\r\n\r\n  handleChangeName = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleChangeDish = (e) => {\r\n    const { value } = e.currentTarget;\r\n    this.setState({ type: value });\r\n  };\r\n\r\n  handleChangeOptions = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    const { type } = this.state;\r\n\r\n    this.setState((prevState) => ({\r\n      [type]: { ...prevState[type], [name]: Number(value) },\r\n    }));\r\n  };\r\n\r\n  createNotification = (type) => {\r\n    switch (type) {\r\n      case \"info\":\r\n        NotificationManager.info(\"All fields should be required\");\r\n        break;\r\n      case \"success\":\r\n        NotificationManager.success(\"Thank you for your order\");\r\n        break;\r\n      case \"warning\":\r\n        NotificationManager.warning(\r\n          \"you can choose from 1 to 8\",\r\n          \"Please choose correct quantity of slices\",\r\n          3000\r\n        );\r\n        break;\r\n      case \"error\":\r\n        NotificationManager.error(\r\n          \"Sorry, something went wrong, please try again later\"\r\n        );\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, preparation_time, type } = this.state;\r\n\r\n    const credentials = {\r\n      name,\r\n      preparation_time,\r\n      type,\r\n      ...this.state[type],\r\n    };\r\n\r\n    if (name === \"\") {\r\n      this.createNotification(\"info\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.state.pizza.no_of_slices > 8 ||\r\n      this.state.sandwich.no_of_slices > 8\r\n    ) {\r\n      this.createNotification(\"warning\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post(\r\n        \"https://frosty-wood-6558.getsandbox.com:443/dishes\",\r\n        credentials\r\n      );\r\n      this.createNotification(\"success\");\r\n      setTimeout(() => {\r\n        this.props.onClose();\r\n      }, 1000);\r\n    } catch (error) {\r\n      this.createNotification(\"error\");\r\n      setTimeout(() => {\r\n        this.props.onClose();\r\n      }, 1000);\r\n    }\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      type,\r\n      pizza: { no_of_slices, diameter },\r\n      soup: { spiciness_scale },\r\n      sandwich: { slices_of_bread },\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form className=\"form_order\">\r\n          <label className=\"label\">\r\n            Name\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              value={name}\r\n              name=\"name\"\r\n              onChange={this.handleChangeName}\r\n            />\r\n          </label>\r\n          <label className=\"label\">\r\n            Dish type:\r\n            <select className=\"input\" onChange={this.handleChangeDish}>\r\n              <option value=\"pizza\">pizza</option>\r\n              <option value=\"soup\">soup</option>\r\n              <option value=\"sandwich\">sandwich</option>\r\n            </select>\r\n          </label>\r\n          {type === \"pizza\" && (\r\n            <>\r\n              <label className=\"label\">\r\n                Slices\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"number\"\r\n                  value={no_of_slices}\r\n                  name=\"no_of_slices\"\r\n                  onChange={this.handleChangeOptions}\r\n                  min=\"1\"\r\n                  max=\"8\"\r\n                  step=\"1\"\r\n                />\r\n              </label>\r\n              <p className=\"label\">Diameter:</p>\r\n              <div className=\"diametr\">\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"8\"\r\n                    name=\"diameter\"\r\n                    checked={diameter === 8}\r\n                    onChange={this.handleChangeOptions}\r\n                  />\r\n                  8\r\n                </label>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"16\"\r\n                    name=\"diameter\"\r\n                    checked={diameter === 16}\r\n                    onChange={this.handleChangeOptions}\r\n                  />{\" \"}\r\n                  16\r\n                </label>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"26\"\r\n                    name=\"diameter\"\r\n                    checked={diameter === 26}\r\n                    onChange={this.handleChangeOptions}\r\n                  />{\" \"}\r\n                  26\r\n                </label>\r\n\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"30\"\r\n                    name=\"diameter\"\r\n                    checked={diameter === 30}\r\n                    onChange={this.handleChangeOptions}\r\n                  />\r\n                  30\r\n                </label>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"38\"\r\n                    name=\"diameter\"\r\n                    checked={diameter === 38}\r\n                    onChange={this.handleChangeOptions}\r\n                  />{\" \"}\r\n                  38\r\n                </label>\r\n              </div>\r\n              <p className=\"label\">\r\n                Preparation time: {this.state.pizza.preparation_time}\r\n              </p>\r\n            </>\r\n          )}\r\n\r\n          {type === \"soup\" && (\r\n            <>\r\n              <label className=\"label\">\r\n                <p>Spiciness scale: {spiciness_scale}</p> 1\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"1\"\r\n                  max=\"10\"\r\n                  name=\"spiciness_scale\"\r\n                  value={spiciness_scale}\r\n                  onChange={this.handleChangeOptions}\r\n                  className=\"input_range\"\r\n                />\r\n                10\r\n              </label>\r\n              <p className=\"label\">\r\n                Preparation time: {this.state.soup.preparation_time}\r\n              </p>\r\n            </>\r\n          )}\r\n\r\n          {type === \"sandwich\" && (\r\n            <>\r\n              <label className=\"label\">\r\n                Slices\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"number\"\r\n                  value={slices_of_bread}\r\n                  name=\"slices_of_bread\"\r\n                  onChange={this.handleChangeOptions}\r\n                  min=\"1\"\r\n                  max=\"8\"\r\n                  step=\"1\"\r\n                />\r\n              </label>\r\n              <p className=\"label\">\r\n                Preparation time: {this.state.sandwich.preparation_time}\r\n              </p>\r\n            </>\r\n          )}\r\n\r\n          <button\r\n            className=\"btn_submit\"\r\n            type=\"submit\"\r\n            onClick={this.handleSubmit}\r\n          >\r\n            Make an order\r\n          </button>\r\n        </form>\r\n        <NotificationContainer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormOrder;\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport \"./Modal.css\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"modal__backdrop\" onClick={this.handleBackdropClick}>\r\n        <div className=\"modal__content\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport FormOrder from \"./components/FormOrder\";\r\nimport Modal from \"./components/Modal\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    showModal: false,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\r\n  };\r\n\r\n  render() {\r\n    const { showModal } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {!showModal && (\r\n          <button className=\"btn_open\" type=\"button\" onClick={this.toggleModal}>\r\n            open the menu\r\n          </button>\r\n        )}\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal}>\r\n            <FormOrder onClose={this.toggleModal} />\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}